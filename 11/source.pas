Program Hanoi3_NoRecursion;
Var d     : array[1..3,1..64] of byte; {список дисков на каждом стержне}
  l       : array[1..3] of byte; {количество дисков на каждом стержне}
  N,i     : byte; {N†Ч общее количество дисков}
  old,new : shortint; {старое и новое положение наименьшего диска}
  delta    : shortint; {смещение, определ€ющее маршрут наименьшего диска}
Procedure Transfer(i1,i2 : byte); {процедура переноса диска со стержн€ i1 на стержень i2}
Begin
 l[i2]:=l[i2]+1;
 d[i2,l[i2]]:=d[i1,l[i1]];
 write(i1,' -->(',d[i1,l[i1]],') ',i2,'; ');
 l[i1]:=l[i1]-1;
End;
Begin
 {¬вод N†Ч количество дисков}
 Е
 l[1]:=N; {сначала все диски на первом стержне, на остальных стержн€х дисков нет}
 l[2]:=0;
 l[3]:=0;
 for i:=1 to N do
 d[1,i]:=N+1-i; {запись номеров дисков, которые лежат на первом стержне, диск†є1†Ч наименьший}
 new:=1; {наименьший диск лежит на первом стержне}
 if odd(N) then {в зависимости от парности†N, смещение†Ч или 1 или -1}
 delta:=-1
 else
 delta:=1;
 while l[3]<N do {выполн€етс€, пока не все диски перенесены на третий стержень}
 begin
  old:=new;
  new:=((old+2+delta) mod 3)+1; {новое положение наименьшего диска можно посчитать по этой формуле}
  Transfer(old,new); {переносим наименьший диск}
  i:=6-old-new; {так как old и new†Ч номера двух из трех стержней, то номер третьего стержн€ считаетс€ как 1+2+3-old-new}
  if (l[old]>0) and ((l[i]=0) or (d[old,l[old]]<d[i,l[i]])) then {если на одном стержне нет дисков, или верхний диск больше верхнего диска на другом стержне, то перекладываем на него диск}
  Transfer(old,i)
  else
  if l[i]>0 then
  Transfer(i,old);
 end;
End.
